getprop("ro.product.device") == "polaris" || abort("E3004: This package is for \"polaris\" devices; this is a \"" + getprop("ro.product.device") + "\".");

# ---- radio update tasks ----

ui_print("--------------------------------");
ui_print("----　　　　　　　　　　　      ");
ui_print("----　　HaisTeam@MIUI_LITE　　  ");
ui_print("----　　　　　　　　　　　   	 ");
ui_print("----　　　　　　by  Hais　      ");
ui_print("----　　　　　　　　　　　      ");
ui_print("--------------------------------");
show_progress(0.200000, 10);
package_extract_file("boot.img", "/dev/block/bootdevice/by-name/boot");
package_extract_file("firmware-update/abl.elf", "/dev/block/bootdevice/by-name/abl_a");
package_extract_file("firmware-update/abl.elf", "/dev/block/bootdevice/by-name/abl_b");
show_progress(0.700000, 250);

ui_print("--------------------------------");
ui_print("----　　　　刷入System　　      ");
ui_print("----　　　　          　　      ");
ui_print("----　　 刷入后请不要双清  　　 ");
ui_print("----　　 刷入后请不要格Data　　 ");
ui_print("----　否则会导致面具等文件丢失  ");
ui_print("----　首次开机,10分钟,请耐心　　");
ui_print("----　　　　          　　      ");
ui_print("--------------------------------");
ui_print("Patching system image unconditionally...");
block_image_update("/dev/block/bootdevice/by-name/system", package_extract_file("system.transfer.list"), "system.new.dat.br", "system.patch.dat") || abort("E1001: Failed to update system image.");
  

ui_print("--------------------------------");
ui_print("----　　　刷入Vendor　　　      ");
ui_print("----　　　　          　　      ");
ui_print("----　　 刷入后请不要双清  　　 ");
ui_print("----　　 刷入后请不要格Data　　 ");
ui_print("----　否则会导致面具等文件丢失  ");
ui_print("----　首次开机,10分钟,请耐心　　");
ui_print("----　　　　          　　      ");
ui_print("--------------------------------");
ui_print("Patching vendor image unconditionally...");
block_image_update("/dev/block/bootdevice/by-name/vendor", package_extract_file("vendor.transfer.list"), "vendor.new.dat.br", "vendor.patch.dat") || abort("E2001: Failed to update vendor image.");

show_progress(0.100000, 2);
# ---- radio update tasks 2 ----
ui_print("--------------------------------");
ui_print("----　　刷入剩余镜像　　　      ");
ui_print("--------------------------------");
ui_print("Patching vbmeta dtbo logo binimages...");
package_extract_file("firmware-update/cmnlib64.img", "/dev/block/bootdevice/by-name/cmnlib64_a");
package_extract_file("firmware-update/devcfg.img", "/dev/block/bootdevice/by-name/devcfg_a");
package_extract_file("firmware-update/aop.img", "/dev/block/bootdevice/by-name/aop_a");
package_extract_file("firmware-update/qupfw.img", "/dev/block/bootdevice/by-name/qupfw_a");
package_extract_file("firmware-update/tz.img", "/dev/block/bootdevice/by-name/tz_a");
package_extract_file("firmware-update/storsec.img", "/dev/block/bootdevice/by-name/storsec_a");
package_extract_file("firmware-update/keymaster.img", "/dev/block/bootdevice/by-name/keymaster_a");
package_extract_file("firmware-update/bluetooth.img", "/dev/block/bootdevice/by-name/bluetooth");
package_extract_file("firmware-update/xbl.img", "/dev/block/bootdevice/by-name/xbl_a");
package_extract_file("firmware-update/modem.img", "/dev/block/bootdevice/by-name/modem");
package_extract_file("firmware-update/xbl_config.img", "/dev/block/bootdevice/by-name/xbl_config_a");
package_extract_file("firmware-update/dsp.img", "/dev/block/bootdevice/by-name/dsp");
package_extract_file("firmware-update/logo.img", "/dev/block/bootdevice/by-name/logo");
package_extract_file("firmware-update/cmnlib.img", "/dev/block/bootdevice/by-name/cmnlib_a");
package_extract_file("firmware-update/hyp.img", "/dev/block/bootdevice/by-name/hyp_a");


ui_print("--------------------------------");
ui_print("----　　　刷入Magisk　　　      ");
ui_print("--------------------------------");
ui_print("Patching magisk binimages...");
run_program("/sbin/mkdir", "/tmp/Hais/Magisk", "-p");
package_extract_file("META-INF/pw/hais/rom/Magisk.zip", "/tmp/Hais/Magisk.zip");
run_program("/sbin/unzip", "/tmp/Hais/Magisk.zip","-d", "/tmp/Hais/Magisk");
run_program("/sbin/sh", "/tmp/Hais/Magisk/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/Hais/Magisk.zip");
run_program("/sbin/busybox", "mount", "/system");
run_program("/sbin/mkdir", "/system/app/Magisk", "-p");
run_program("/sbin/cp", "/tmp/Hais/Magisk/common/magisk.apk","/system/app/Magisk/Magisk.apk");
run_program("/sbin/chmod","644","/system/app/Magisk/Magisk.apk");

ui_print("--------------------------------");
ui_print("----　　   删除临时文件  　　   ");
ui_print("--------------------------------");
ui_print("Clean cust tmp dalvik-cache package_cache ...");
ifelse(is_mounted("/system_root"), unmount("/system_root"));
ifelse(is_mounted("/system"), unmount("/system"));
ifelse(is_mounted("/system_root"), unmount("/vendor"));
ifelse(is_mounted("/cache"), unmount("/cache"));
ifelse(is_mounted("/cust"), unmount("/cust"));
ifelse(is_mounted("/cust"), unmount("/persist"));
run_program("/sbin/busybox", "mount", "/system_root");
run_program("/sbin/busybox", "mount", "/system");
run_program("/sbin/busybox", "mount", "/vendor");
run_program("/sbin/busybox", "mount", "/cache");
run_program("/sbin/busybox", "mount", "/cust");
run_program("/sbin/busybox", "mount", "/persist");
run_program("/sbin/busybox", "rm", "-rf", "/cust");
run_program("/sbin/busybox", "rm", "-rf", "/data/cust");

ui_print("--------------------------------");
ui_print("----　　 正在执行Hais脚本  　   ");
ui_print("----　　　　          　　      ");
ui_print("----　　 刷入后请不要双清  　　 ");
ui_print("----　　 刷入后请不要格Data　　 ");
ui_print("----　否则会导致面具等文件丢失  ");
ui_print("----　首次开机,10分钟,请耐心　　");
ui_print("----　　　　          　　      ");
ui_print("--------------------------------");
run_program("/sbin/mkdir", "/tmp/Hais/ReplaceFile", "-p");
package_extract_file("META-INF/pw/hais/rom/ReplaceFile.dat", "/tmp/Hais/ReplaceFile.dat");
run_program("/sbin/unzip", "/tmp/Hais/ReplaceFile.dat", "-d", "/tmp/Hais/ReplaceFile");
package_extract_file("META-INF/pw/hais/rom/hais_diy_rom.so", "/tmp/Hais/ReplaceFile/hais_diy_rom.so");
run_program("/sbin/chmod","0777","/tmp/Hais/ReplaceFile/hais_diy_rom.so");
run_program("/sbin/busybox", "sh", "/tmp/Hais/ReplaceFile/hais_diy_rom.so", "dummy", "1", "/tmp/Hais/ReplaceFile/hais_diy_rom.so");
run_program("/sbin/busybox", "rm", "-rf", "/tmp/Hais");
show_progress(0.0800000, 250);


ui_print("--------------------------------");
ui_print("----　　　　　　　　　　　      ");
ui_print("----　　HaisTeam@MIUI_LITE　　  ");
ui_print("----　　　　　　　　　　　      ");
ui_print("----　　　　　　by  Hais　      ");
ui_print("--------------------------------");
ui_print("----　　　　　　　　　　　      ");
ui_print("----　　 刷机结束，耐心等待　　 ");
ui_print("----　　 首次开机，约10分钟　　 ");
ui_print("----　　　　　　　　　　　      ");
ui_print("----  如要恢复APK，请看群公告   ");
ui_print("----  如刷机后不能开机，可尝试在TWRP的高级中解除强制加密   ");
ui_print("----　　　　　　　　　　　      ");
ui_print("----　　　　　Q群：616490741    ");
ui_print("----　　　　　　　　　　　      ");
ui_print("--------------------------------");

set_progress(1.000000);